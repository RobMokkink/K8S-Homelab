---
- name: Prep nodes for k8s
  hosts: all
  vars:
    k8s_version: "1.31.3-1.1"
    k8s_url_apt_key: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key"
    k8s_gpgpath: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    k8s_repository: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/"
    docker_url_apt_key: "https://download.docker.com/linux/ubuntu/gpg"
    docker_gpgpath: "/etc/apt/trusted.gpg.d/docker.gpg"
    k8s_network: "calico"
    k8s_network_fw:
      calico:
        tcp:
          - "179"
          - "4789"
          - "5473"
          - "443"
          - "2379"
          - "9099"
        udp:
          - "4789"
      weave:
        tcp:
          - "6781"
          - "6782"
          - "6783"
        udp:
          - "6783:6784"
    req_packages:
      - iptables
      - arptables
      - ebtables
      - apt-transport-https
      - curl
      - bash-completion
      - nfs-common
      - vim
      - ca-certificates
      - software-properties-common
      - gnupg2
    container_packages:
      - containerd.io
    k8s_packages:
      - kubelet
      - kubeadm
      - kubectl
    k8s_fw:
      master:
        - "22"
        - "80"
        - "443"
        - "6443"
        - "2379:2380"
        - "10250"
        - "10251"
        - "10252"
        - "30000:32767"
      worker:
        - "22"
        - "80"
        - "443"
        - "10250"
        - "30000:32767"
  tasks:

    - name: Hush config file for ubuntu
      file:
        path: /home/devops/.hushlogin
        owner: devops
        group: devops
        state: touch
      changed_when: false

    - name: Set timezone to Europe/Amsterdam
      community.general.timezone:
        name: Europe/Amsterdam

    - name: Configure networksettings for sysctl
      copy:
        src: k8s.conf
        dest: /etc/sysctl.d/k8s.conf
      notify: reload sysconfig

    - name: Force handlers
      meta: flush_handlers

    - name: Configure modules for containerd
      copy:
        src: containerd.conf
        dest: /etc/modules-load.d/containerd.conf

    - name: Load modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure the ufw firewall for master node
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop: "{{ k8s_fw.master }}"
      when: inventory_hostname in groups.masters

    - name: Configure the ufw firewall for worker node
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop: "{{ k8s_fw.worker }}"
      when: inventory_hostname in groups.workers

    - name: Enable TCP ports for network {{ k8s_network }}
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop: "{{ k8s_network_fw[k8s_network].tcp }}"

    - name: Enable UDP ports for network {{ k8s_network }}
      ufw:
        rule: allow
        port: "{{ item}}"
        proto: udp
      loop: "{{ k8s_network_fw[k8s_network].udp }}"

    - name: Enable the ufw firewall at startup
      ufw:
        state: enabled

    - name: Upgrade all packages to the latest version
      apt:
        name: "*"
        state: latest

    - name: Update all packages to the latest version
      apt:
        upgrade: dist

    - name: Install Required Packges
      package:
        name: "{{ req_packages }}"
        state: present

    - name: Get Docker package key
      shell: >
        sudo curl -fsSL {{ docker_url_apt_key }} | sudo gpg --dearmour -o {{ docker_gpgpath }}
      args:
        creates: "{{ k8s_gpgpath }}"

    - name: Get Kubernetes package key
      shell: >
        curl -fsSL {{ k8s_url_apt_key }} | gpg --dearmor -o {{ k8s_gpgpath }}
      args:
        creates: "{{ k8s_gpgpath }}"

    - name: Add the docker apt repository
      apt_repository:
        state: present
        filename: docker-ce
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

    - name: Add the k8s apt repository
      apt_repository:
        repo: "deb [signed-by={{ k8s_gpgpath }}] {{ k8s_repository }} /"
        state: present
        filename: kubernetes

    - name: Update packages after adding repo
      apt:
        update_cache: true
        force_apt_get: true
        cache_valid_time: 3600

    - name: Install container runtime packages
      apt:
        name: "{{ container_packages }}"
        state: present

    - name: Start and enable containerd
      ansible.builtin.service:
        name: containerd
        enabled: true
        state: started

    - name: Create default config.toml file
      shell: >
        containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

    - name: Configure containerd for systemd
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: "SystemdCgroup = false"
        replace: "SystemdCgroup = true"
      notify: restart containerd

    - name: Install the k8s packages
      apt:
        name: "{{ item }}={{ k8s_version }}"
        state: present
        force: true
      loop: "{{ k8s_packages }}"

    - name: Hold certain k8s packages
      command: "apt-mark hold kubelet kubeadm kubectl"
      changed_when: false

  handlers:

    - name: reload sysconfig
      command: sysctl --system

    - name: restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: true
        daemon_reload: true
